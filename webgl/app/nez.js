// Generated by CoffeeScript 1.4.0
var Expectation, Nez;

Nez = (function() {

  function Nez() {}

  Nez.expectArray = [];

  Nez.test = function(callback) {
    var expectation;
    while (Nez.expectArray.length > 0) {
      expectation = Nez.expectArray.shift();
      expectation.obj[expectation.functionName] = expectation.functionOrig;
    }
    return callback();
  };

  return Nez;

}).call(this);

Expectation = (function() {

  function Expectation(functionName, functionArgs, functionOrig, obj) {
    this.functionName = functionName;
    this.functionArgs = functionArgs;
    this.functionOrig = functionOrig;
    this.obj = obj;
    this.obj[this.functionName] = function() {};
  }

  return Expectation;

})();

Object.prototype.expectCall = function(xpect) {
  var fName, x, _results;
  _results = [];
  for (fName in xpect) {
    x = new Expectation(fName, xpect[fName], this[fName], this);
    _results.push(Nez.expectArray.push(x));
  }
  return _results;
};

module.exports = Nez;
